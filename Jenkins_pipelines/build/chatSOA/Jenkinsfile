pipeline {
    agent {
        kubernetes {
            inheritFrom 'build-chat'
            defaultContainer 'kubectl'
            namespace 'soa-microservices'
            serviceAccount 'chatsoa-deployer'
        }
    }

    parameters {
        string(
            name: 'TARGET_BRANCH',
            defaultValue: 'ops/jenkins-chat-improvement',
            description: 'Branche à builder'
        )
    }

    environment {
        DOCKERHUB_IMAGE   = 'k-chatsoa'
        IMAGE_TAG         = "${BUILD_NUMBER}-latest"
        DOCKER_BUILDKIT   = '1'
        GRADLE_CACHE_PATH = '/mnt/gradle_cache'
        GRADLE_USER_HOME  = "${GRADLE_CACHE_PATH}"
        REPO_URL          = 'https://github.com/ines312692/Microservices_Social_Engagement_Architecture.git'
        SONARQUBE_SERVER  = 'sonarqube-local'
        WORK_DIR          = "${WORKSPACE}/chatSOA/chatSOA"
    }

    options {
        skipDefaultCheckout(true)
    }

    triggers {
        githubPush()
    }

    stages {

       stage('Debug Kubectl Container') {
           steps {
               container('kubectl') {
                   script {
                       try {
                           echo "=== Container Debugging ==="
                           def restartResult = sh(
                                                   script: "kubectl rollout restart deployment/chatsoa-deployment -n soa-microservices",
                                                   returnStatus: true
                                               )

                       } catch (Exception e) {
                           echo "Debug error: ${e.getMessage()}"
                           // Continuons le debug même en cas d'erreur
                           try {
                               sh "find / -name kubectl -type f 2>/dev/null || echo 'kubectl not found anywhere'"
                           } catch (Exception e2) {
                               echo "Cannot find kubectl: ${e2.getMessage()}"
                           }
                       }
                   }
               }
           }
       }

        stage('Restart Deploy to Kubernetes') {
            steps {
                container('kubectl') {
                    script {
                        try {
                            echo "Restarting chatsoa-deployment..."
                            sh """
                                kubectl rollout restart deployment/chatsoa-deployment -n soa-microservices
                                kubectl rollout status deployment/chatsoa-deployment -n soa-microservices --timeout=120s
                            """
                        } catch (Exception e) {
                            echo "Error while restarting deployment: ${e.toString()}"
                            currentBuild.result = 'FAILURE'
                            throw e
                        }
                    }
                }
            }
        }

    }

    post {
        success {
            echo "Build completed successfully for ChatSOA"
        }
        failure {
            echo "Build failed for ChatSOA"
        }
    }
}
