pipeline {
  agent {
    kubernetes {
      inheritFrom 'build-chat'
      defaultContainer 'docker'
      namespace 'soa-microservices'
      serviceAccount 'chatsoa-deployer'
    }
  }

  environment {
    DOCKERHUB_USERNAME = 'inestmimi123'
    DOCKERHUB_IMAGE = 'k-chatsoa'
    IMAGE_TAG = "${BUILD_NUMBER}-latest"
    DOCKER_BUILDKIT = '1'
    GRADLE_CACHE_PATH = '/mnt/gradle_cache'
    ARTIFACTS_PVC_PATH = '/mnt/artifacts'
    WORK_DIR = "${WORKSPACE}/chatSOA/chatSOA"
    SONARQUBE_SERVER = 'sonarqube-local'
    BRANCH_NAME = 'feature/restructure-pipeline'
    REPO_URL = 'https://github.com/ines312692/Microservices_Social_Engagement_Architecture.git'
  }

  options {
    skipDefaultCheckout(true)
  }

   stages {
     stage('Checkout') {
         steps {
             container('git') {
                 script {
                     echo "Début du Checkout depuis la branche ${BRANCH_NAME}"
                     try {
                         retry(2) {
                             checkout([
                                 $class: 'GitSCM',
                                 branches: [[name: "*/${BRANCH_NAME}"]],
                                 userRemoteConfigs: [[url: "${REPO_URL}"]],
                                 extensions: [
                                     // Shallow clone rapide
                                     [$class: 'CloneOption', depth: 1, noTags: true, shallow: true],
                                     // Utilisation de la branche locale
                                     [$class: 'LocalBranch', localBranch: "${BRANCH_NAME}"]
                                 ]
                             ])
                         }

                         echo "Checkout effectué avec succès depuis ${BRANCH_NAME}"

                         if (env.DEBUG == 'true') {
                             sh 'ls -la'
                         }

                     } catch (Exception e) {
                         echo "Erreur dans le stage 'Checkout' : ${e.getMessage()}"
                         error("Échec du checkout Git pour ${BRANCH_NAME}")
                     }
                 }
             }
         }
     }




      stage('UnitTests') {
        steps {
          echo "Stage vide pour le moment"
        }
      }

      stage('SonarQube') {
        steps {
          echo "Stage vide pour le moment"
        }
      }

      stage('Build') {
        steps {
          echo "Stage vide pour le moment"
        }
      }

      stage('Push') {
        steps {
          echo "Stage vide pour le moment"
        }
      }

      stage('Deploy') {
        steps {
          echo "Stage vide pour le moment"
        }
      }
    }
  }