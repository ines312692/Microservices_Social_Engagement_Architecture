pipeline {
  agent {
    kubernetes {
      inheritFrom 'build-eng'
      defaultContainer 'docker'
      namespace 'soa-microservices'
      serviceAccount 'engsoa-deployer'
    }
  }

  environment {
    DOCKERHUB_USERNAME = 'inestmimi123'
    DOCKERHUB_IMAGE = 'k-engsoa'
    IMAGE_TAG = "${BUILD_NUMBER}-${GIT_COMMIT.take(7)}"
    DOCKER_BUILDKIT = '1'
    GRADLE_CACHE_PATH = '/mnt/gradle_cache'
    ARTIFACTS_PVC_PATH = '/mnt/artifacts'
    WORK_DIR = "${WORKSPACE}/engagementSOA"
  }

  options {
    skipDefaultCheckout(true)
    timestamps()
    timeout(time: 15, unit: 'MINUTES')
  }

  stages {
    stage('Checkout Last Commit Only') {
      steps {
        checkout([
          $class: 'GitSCM',
          branches: [[name: '*/feature/otimising_jenkins_build_performance']],
          userRemoteConfigs: [[url: 'https://github.com/ines312692/Microservices_Social_Engagement_Architecture.git']],
          extensions: [
            [$class: 'CloneOption', depth: 1, noTags: false, shallow: true]
          ]
        ])
      }
    }

    stage('Build and Test') {
      steps {
        container('docker') {
          dir("${WORK_DIR}") {
            sh './gradlew build --no-daemon --build-cache --parallel --project-cache-dir=${GRADLE_CACHE_PATH}'
          }
        }
      }
    }

    stage('Docker Login') {
      steps {
        container('docker') {
          withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
            sh 'echo "$PASSWORD" | docker login -u "$USERNAME" --password-stdin'
          }
        }
      }
    }

    stage('Build and Push Image with Cache') {
      steps {
        container('docker') {
          dir("${WORK_DIR}") {
            sh '''
              docker buildx create --use --name mybuilder || true
              docker buildx build \
                --cache-from=type=registry,ref=$DOCKERHUB_USERNAME/$DOCKERHUB_IMAGE:cache \
                --cache-to=type=registry,ref=$DOCKERHUB_USERNAME/$DOCKERHUB_IMAGE:cache,mode=max \
                --build-arg BUILDKIT_INLINE_CACHE=1 \
                --push \
                -t $DOCKERHUB_USERNAME/$DOCKERHUB_IMAGE:$IMAGE_TAG \
                -t $DOCKERHUB_USERNAME/$DOCKERHUB_IMAGE:latest .
            '''
          }
        }
      }
    }

    stage('Save Artifacts') {
      steps {
        container('docker') {
          sh '''
            mkdir -p ${ARTIFACTS_PVC_PATH}/engsoa-${BUILD_NUMBER}
            cp -r ${WORK_DIR}/* ${ARTIFACTS_PVC_PATH}/engsoa-${BUILD_NUMBER}/ || true
          '''
        }
      }
    }

    stage('Nettoyage') {
      steps {
        container('docker') {
          sh 'docker system prune -f || true'
        }
      }
    }
  }

  post {
    success {
      echo "Build terminé avec succès pour EngagementSOA"
    }
    failure {
      echo "Build échoué pour EngagementSOA"
    }
    cleanup {
      sh 'docker logout || true'
    }
  }
}
